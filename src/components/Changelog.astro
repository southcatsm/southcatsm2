---
import { Icon } from "astro-icon/components";
const { logs = [] } = Astro.props;

const typeColors = {
	fix: {
		base: "bg-red-400 text-red-800",
		hover: "hover:bg-red-500 hover:text-red-50"
	},
	optimize: {
		base: "bg-green-400 text-green-800",
		hover: "hover:bg-green-500 hover:text-green-50"
	},
	update: {
		base: "bg-blue-400 text-blue-800",
		hover: "hover:bg-blue-500 hover:text-blue-50"
	},
	maintain: {
		base: "bg-yellow-400 text-yellow-800",
		hover: "hover:bg-yellow-500 hover:text-yellow-50"
	}
};
---

<div class="relative max-w-3xl mx-auto space-y-8">
	<div class="absolute left-4 top-0 bottom-0 w-0.5 bg-gray-200 dark:bg-gray-700 -z-10"></div>
  
	{logs.map((log, index) => {
		const date = new Date(log.date);
		const frdt = date.toLocaleDateString("en-US", {
			month: "short",
			day: "2-digit",
			year: "numeric"
		});
    
		return (
			<div class="relative pl-12 group">
				<div class="absolute left-0 top-1.5 w-8 h-8 rounded-full bg-primary text-white flex items-center 
				justify-center shadow-md border-4 border-base-100 dark:border-gray-900">
					<Icon 
						name={log.type === "fix" ? "mdi:bug" : 
							log.type === "optimize" ? "mdi:rocket" : 
							log.type === "maintain" ? "mdi:source-branch-plus" :
							"mdi:update"}
						class="w-4 h-4"
					/>
				</div>
				<div class="bg-base-100 rounded-xl shadow-md border border-gray-200 
				overflow-hidden transition-all duration-300 hover:shadow-lg" id={log.code}>
					<div class="p-6">
						<div class="flex items-center justify-between mb-3">
							<div class="flex items-center gap-2">
								<span class="text-sm font-bold text-gray-500 dark:text-gray-400">
									{frdt}
								</span>
								{log.type && typeColors[log.type] && (
									<span class={`text-xs px-2 py-1 rounded-full transition-all duration-300 transform 
								    ${typeColors[log.type].base} 
								    ${typeColors[log.type].hover}
								    border-none hover:scale-105`}>
										{{
											'fix': '修复',
											'optimize': '优化',
											'update': '更新',
											'maintain': '维护'
										}[log.type]}
									</span>
								)}
								{log.code && (
									<span class="text-[0.7rem] font-mono text-gray-400 mt-1">
										{log.code.slice(0, 8)}
									</span>
								)}
							</div>
							<span class="text-xs text-gray-400">
								#{logs.length - index}
							</span>
						</div>
					
						<div class="h-px w-full bg-gradient-to-r from-primary/20 via-primary/50 to-primary/20 my-4"></div>
					
						<ul class="list-disc list-inside space-y-2 text-base-content">
							{log.entries.map((entry) => (
								<li class="text-sm md:text-base fonts">{entry}</li>
							))}
						</ul>
					</div>
					{log.command && (
						<div class="bg-base-200 dark:bg-gray-700 px-6 py-4 border-t border-gray-200">
							<div class="flex items-center justify-between mb-2">
								<span class="text-xs font-mono text-gray-500">部署命令</span>
								<button 
									onclick={`navigator.clipboard.writeText('${log.command}')`}
									class="text-xs flex items-center gap-1 text-gray-500 hover:text-primary"
								>
									<Icon name="mdi:content-copy" class="w-3 h-3" />
									复制
								</button>
							</div>
							<pre class="m-0 p-0 text-primary"><code class="language-bash text-sm">{log.command}</code></pre>
						</div>
					)}
				</div>
			</div>
		);
	})}
</div>

<style>
	@font-face {
		font-family: "qsbold";
		src: url(https://cdn.jsdelivr.net/gh/daeroa/nrcdn2/fonts/qsbold.ttf);
	}
	pre code {
		display: block;
		padding: 0.75rem;
		overflow-x: auto;
		background: var(--tw-prose-pre-bg);
		border-radius: 0.375rem;
		color: var(--tw-prose-pre-code);
	}
	.group:hover .absolute.left-0 {
		transform: scale(1.1);
		transition: transform 0.2s ease;
	}
	.fonts {
		font-family: "qsbold";
	}
</style>